using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace HR_Macros
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
            button2.Enabled = false;
        }

        private void button1_Click(object sender, EventArgs e)
        {
            openFileDialog1.Filter = "C++ Files (*.Cpp)|*.Cpp";
            openFileDialog1.RestoreDirectory= true;
            string fullPath = string.Empty;
            string lastFolderName = @"C:\";

            if (openFileDialog1.ShowDialog()==DialogResult.OK)
                fullPath = openFileDialog1.FileName;

            if (fullPath != "")
                 lastFolderName = Path.GetDirectoryName(fullPath);

            string[] files = Directory.GetFiles(lastFolderName);
            textBox1.Text = lastFolderName;

            foreach (var file in files)
            {
                if (file.EndsWith(".cpp"))
                    checkedListBox1.Items.Add(file);   
            }
            button2.Enabled = true;
        }

        private void textBox1_Click(object sender, EventArgs e)
        {
            textBox1.Text = string.Empty;
        }

        private void button2_Click(object sender, EventArgs e)
        {
            foreach (var list in checkedListBox1.CheckedItems)
            {
                string filePath = list.ToString();
                List<string> lines = new List<string>(File.ReadAllLines(filePath));
                List<string> newLines = new List<string>(); 
                char i = (char)34;
                string searchString = "HR_ONFAIL_THROW(hr, " + i + i +");";
                int currentIndex = -1;
                foreach (var line in lines)
                {
                     if (!(line.Contains("HR_ONFAIL_THROW(hr")))
                          currentIndex = lines.FindIndex(x => x == line);

                    if (line.Contains("HR_ONFAIL_THROW(hr"))
                    {
                        if (currentIndex != -1)
                        {
                            string replacedString = "HR_ONFAIL_THROW(hr, " + i + "Failed: " + lines[currentIndex] + i + ")";
                            string finalString = replacedString.Replace(";", "");
                            finalString.Trim();
                            newLines.Add("		" + finalString);
                        }
                        else
                            newLines.Add(line);
                    }
                    else
                        newLines.Add(line);
                }

                string newFile = string.Empty ;

                if (filePath.EndsWith(".cpp"))
                    newFile = filePath.Replace(".cpp", "_tlk.cpp");

                using (StreamWriter streamWriter = File.AppendText(newFile))
                {
                    foreach (var newLine in newLines)
                    {
                        streamWriter.WriteLine(newLine);
                        streamWriter.Flush();
                    }
                }
            }

            MessageBox.Show("TLK Updating Macro completed.....!!!!", "HR_Macros", MessageBoxButtons.OK, MessageBoxIcon.Information);
        }
    }
}
